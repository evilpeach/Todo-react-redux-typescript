{"version":3,"sources":["webpack:///./src/containers/TodoForm.tsx","webpack:///./src/components/AddForm.tsx"],"names":["_reactRedux","__webpack_require__","_todo","mapDispatchToProps","handleSubmit","addTodo","TodoForm","connect","AddForm","props","_classCallCheck","this","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","handleChange","e","setState","assign","state","_defineProperty","currentTarget","name","value","title","preventDefault","bind","React","Component","store","subscribe","console","log","getState","todos","map","todo","titleValid","createElement","onSubmit","style","width","padding","margin","display","type","onChange","color","cursor","disabled"],"mappings":"2IAAA,IAAAA,EAAAC,EAAA,IACAC,EAAAD,EAAA,wDACAA,EAAA,MACA,IAAME,GACFC,aAAcC,WAEZC,GAAW,EAAAN,EAAAO,SAAQ,KAAMJ,EAAd,CAAkCK,qBACpCF,kVCPfL,EAAA,QACAA,EAAA,4DACqBO,cACjB,SAAAA,EAAYC,gGAAOC,CAAAC,KAAAH,GAAA,IAAAI,mKAAAC,CAAAF,MAAAH,EAAAM,WAAAC,OAAAC,eAAAR,IAAAS,KAAAN,KACTF,IADS,OAEfG,EAAKM,aAAe,SAACC,GACjBP,EAAKQ,SAASL,OAAOM,UAAWT,EAAKU,4HAAvBC,IAAiCJ,EAAEK,cAAcC,KAAON,EAAEK,cAAcE,UAE1Fd,EAAKR,aAAe,SAACe,GACjB,IAAMQ,EAAQf,EAAKU,MAAMK,MACzBf,EAAKH,MAAML,aAAauB,GACxBf,EAAKQ,UACDO,MAAO,KAEXR,EAAES,kBAENhB,EAAKU,OACDK,MAAO,IAEXf,EAAKM,aAAaW,KAAKjB,EAAKM,cAC5BN,EAAKR,aAAayB,KAAKjB,EAAKR,cAjBbQ,qUADckB,UAAMC,2DAsBnCC,UAAMC,UAAU,kBAAMC,QAAQC,IAAI,QAASH,UAAMI,WAAWC,MAAMC,IAAI,SAACC,GAAD,OAAUA,EAAKZ,4CAGrF,IAAMa,GAAc7B,KAAKW,MAAMK,MAc/B,OAAQG,UAAMW,cAAc,QAAUC,SAAU/B,KAAKP,cACjD0B,UAAMW,cAAc,QAAS,KACzB,uBACAX,UAAMW,cAAc,SAAWE,OAfnCC,MAAO,OACPC,QAAS,WACTC,OAAQ,QACRC,QAAS,gBAY4CC,KAAM,OAAQvB,KAAM,QAASC,MAAOf,KAAKW,MAAMK,MAAOsB,SAAUtC,KAAKO,gBAC1HY,UAAMW,cAAc,SAAWE,OAV/BC,MAAO,OACPM,MAAO,QACPL,QAAS,YACTC,OAAQ,YACRK,OAAQ,WAM2CH,KAAM,SAAUI,SAAUZ,EAAYd,MAAO,+BA3CvFlB","file":"1.bundle.js","sourcesContent":["import { connect } from 'react-redux';\nimport { addTodo } from '../actions/todo';\nimport AddForm from '../components/AddForm';\nconst mapDispatchToProps = {\n    handleSubmit: addTodo\n};\nconst TodoForm = connect(null, mapDispatchToProps)(AddForm);\nexport default TodoForm;\n","import React from 'react';\nimport store from '../../store/index';\nexport default class AddForm extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = (e) => {\n            this.setState(Object.assign({}, this.state, { [e.currentTarget.name]: e.currentTarget.value }));\n        };\n        this.handleSubmit = (e) => {\n            const title = this.state.title;\n            this.props.handleSubmit(title);\n            this.setState({\n                title: ''\n            });\n            e.preventDefault();\n        };\n        this.state = {\n            title: ''\n        };\n        this.handleChange.bind(this.handleChange);\n        this.handleSubmit.bind(this.handleSubmit);\n    }\n    // Debug redux store\n    componentWillMount() {\n        store.subscribe(() => console.log('Test ', store.getState().todos.map((todo) => todo.title)));\n    }\n    render() {\n        const titleValid = (this.state.title) ? false : true;\n        const textStyle = {\n            width: '100%',\n            padding: '8px 15px',\n            margin: '3px 0',\n            display: 'inline-block',\n        };\n        const buttonStyle = {\n            width: '100%',\n            color: 'black',\n            padding: '12px 20px',\n            margin: '15px 15px',\n            cursor: 'pointer',\n        };\n        return (React.createElement(\"form\", { onSubmit: this.handleSubmit },\n            React.createElement(\"label\", null,\n                \"WHAT YOU WANT TO DO:\",\n                React.createElement(\"input\", { style: textStyle, type: \"text\", name: \"title\", value: this.state.title, onChange: this.handleChange })),\n            React.createElement(\"input\", { style: buttonStyle, type: \"submit\", disabled: titleValid, value: \"Submit\" })));\n    }\n}\n"],"sourceRoot":""}